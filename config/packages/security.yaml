security:
    access_decision_manager:
        strategy: unanimous
        allow_if_all_abstain: false
    enable_authenticator_manager: true
    providers:
        parthenon:
            id: Parthenon\User\Security\UserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/(api|athena)/
            stateless: false
            lazy: true
            provider: parthenon
            remember_me:
                secret: '%kernel.secret%'
                always_remember_me: true
            logout:
                path: parthenon_user_logout
            json_login:
                check_path: /api/authenticate
            user_checker: Parthenon\User\Security\UserChecker\UserCheckerObserver
    password_hashers:
        Parthenon\User\Entity\UserInterface:
            algorithm: bcrypt

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/athena, roles: ROLE_ADMIN }
        - { path: ^/api/(authenticate|login|logout), roles: PUBLIC_ACCESS }
        - { path: ^/api/user/(signup|password|reset|confirm), roles: PUBLIC_ACCESS }
        - { path: ^/api/, roles: ROLE_USER }

    role_hierarchy:
        ROLE_SUPER_ADMIN: ROLE_ADMIN
        ROLE_ADMIN: [ROLE_USER, ROLE_SALES]
        ROLE_SALES: ROLE_EMPLOYEE
        ROLE_EMPLOYEE: ROLE_USER